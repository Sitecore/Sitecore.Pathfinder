<#@template language="C#" hostspecific="true" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Threading.Tasks" #>
<#@ import namespace="Sitecore.Pathfinder.Building" #>
<#@ import namespace="Sitecore.Pathfinder.Extensions" #>
<#@ import namespace="Sitecore.Pathfinder.Projects" #>
<#@ import namespace="Sitecore.Pathfinder.Projects.Items" #>
<#@ import namespace="Sitecore.Pathfinder.Projects.Templates" #>
<# 
    IBuildContext context = (Host as T4.Host).Context; 
    IProject project = (Host as T4.Host).Project; 
    Template template = (Host as T4.Host).Item as Template;

    var className = template.Name.GetSafeCodeIdentifier() + "FactoryTests"; 
    var items = project.Items.Where(i => i.Template == template).ToList();
#>
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//
// </auto-generated>
//------------------------------------------------------------------------------
                
using NUnit.Framework;
using Sitecore.FakeDb;

namespace Sitecore
{
    [TestFixture]
    public partial class <#= className #>
    {
        public Db Db { get; set; }

        [SetUp]
        public void Setup() 
        {
            Db = FakeDbFactory.GetDb();
        }

<# foreach(var item in items) 
{
#>
        [Test]
        public void <#= item.Name.GetSafeCodeIdentifier() #>Test()
        {
           var item = Db.GetItem("<#= item.ID.ToString() #>"); 
           Assert.IsNotNull(item);

<# foreach(var field in item.Fields)
{
   var value = field.Value.Replace("\"", "\\\"").Replace("\r", "\\r").Replace("\n", "\\n");
#>
           Assert.AreEqual("<#= value #>", item["<#= field.Name #>"]);
<#
}
#>
        }

<# } #>
    }
}                  
