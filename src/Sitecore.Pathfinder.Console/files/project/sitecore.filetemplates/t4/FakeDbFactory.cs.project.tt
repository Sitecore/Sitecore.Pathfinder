<#@template language="C#" hostspecific="true" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Threading.Tasks" #>
<#@ import namespace="Sitecore.Pathfinder.Building" #>
<#@ import namespace="Sitecore.Pathfinder.Extensions" #>
<#@ import namespace="Sitecore.Pathfinder.Projects" #>
<#@ import namespace="Sitecore.Pathfinder.Projects.Items" #>
<#@ import namespace="Sitecore.Pathfinder.Projects.Templates" #>
<# 
    IProject project = (Host as T4.Host).Project; 
    IBuildContext context = (Host as T4.Host).Context; 
#>
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//
// </auto-generated>
//------------------------------------------------------------------------------
                
#pragma warning disable 1591

using Sitecore.Data;
using Sitecore.FakeDb;

namespace Sitecore
{
    #region Designer generated code

    public static class FakeDbFactory
    {
        public static Db GetDb() 
        {
            return new Db
            {
<#
var firstTemplate = true;
foreach(var template in project.Templates.OrderBy(t => t.Name))
{
    if (!firstTemplate) 
    {
      Write(",\r\n");
    }
    else 
    {
      firstTemplate = false;
    }

    var baseTemplates = string.Join(", ", template.BaseTemplates.Split('|').Select(t => "new ID(\"" + t.ToString() + "\")"));
    var fields = string.Join(", ", template.Fields.Select(f => "\"" + f.Name + "\""));
#>
                new DbTemplate("<#= template.Name #>", TemplateIds.<#= template.Name.GetSafeCodeIdentifier() #>.ID) 
                { 
                    BaseIDs = new ID[] { <#= baseTemplates #> },
                    Fields = { <#= fields #> }
                }<#             
  }
#>,

<# 
var firstItem = true;
foreach(var item in project.Items.OrderBy(t => t.Name))
{
    if (!firstItem) 
    {
      Write(",\r\n");
    }
    else 
    {
      firstItem = false;
    }

    var templateId = string.Empty;
    if (item.Template.IsImport) {
        templateId = "new ID(\"" + item.TemplateID.ToString() + "\")";
    }
    else 
    {
        templateId = "TemplateIds." + item.TemplateName.GetSafeCodeIdentifier() + ".ID";
    }
#>
                new DbItem("<#= item.Name #>", new ID("<#= item.ID.ToString() #>"), <#= templateId #>) 
                { 
                    <# 
var firstField = true;
foreach(var field in item.Fields) 
{ 
    if (!firstField) 
    {
      Write(",\r\n                    ");
    }
    else 
    {
      firstField = false;
    }

    Write("{ \"");
    Write(field.Name);
    Write("\", \"");
    Write(field.Value.Replace("\"", "\\\"").Replace("\r", "\\r").Replace("\n", "\\n"));
    Write("\" }");
}
#> 
                }<#
}
#>
            
            };
        } 
    }

    #endregion
}                  

#pragma warning restore 1591